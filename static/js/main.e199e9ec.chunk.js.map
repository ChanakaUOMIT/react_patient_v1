{"version":3,"sources":["components/layout/spinner.gif","store.js","components/layout/AppNavbar.js","components/layout/Sidebar.js","components/layout/Spinner.js","components/doctors/Doctors.js","components/layout/Dashboard.js","components/doctors/AddDoctor.js","components/doctors/DoctorDetails.js","components/doctors/EditDoctor.js","components/patient/QueueNumber.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","store","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestoreReducer","window","__REDUX_DEVTOOLS_EXTENSION__","AppNavbar","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","id","Component","Sidebar","Spinner","src","spinner","alt","style","width","margin","display","Doctors","doctors","this","props","length","map","doctor","key","firstName","lastName","field","email","phone","totalCount","count","concat","firestoreConnect","collection","connect","state","ordered","Dashboard","doctors_Doctors","AddDoctor","onChange","e","_this","setState","Object","defineProperty","target","name","value","onSubmit","preventDefault","newDoctor","_this$props","history","add","then","push","htmlFor","minLength","required","DoctorDetails","showDetails","patientCount","totalPatient","updateTotalPatient","console","log","doctorUpdate","parseInt","toString","update","doc","upTotalCount","_this$props2","downTotalCount","_this$props3","downCount","_this$props4","upCount","_this$props5","countSubmit","_this$props6","onDeleteClick","_this$props7","delete","_this2","_this$state","countForm","placeholder","onClick","classnames","text-danger","text-success","href","storeAs","match","params","_ref","EditDoctor","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updDoctor","firstNameInput","current","lastNameInput","fieldInput","emailInput","phoneInput","React","createRef","ref","defaultValue","QueueNumber","App","es","HashRouter","layout_AppNavbar","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e199e9ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2f2ad951.gif\";","import { createStore, combineReducers, compose } from 'redux';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\r\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\r\n//Reducers\r\n//@todo\r\n// import notifyReducer from './reducers/notifyReducer';\r\n// import settingsReducer from './reducers/settingsReducer';\r\n\r\nconst firebaseConfig={\r\n    apiKey: \"AIzaSyDwp_dHndzHrU81qc0vHR9eeOnS5Ynvn-A\",\r\n    authDomain: \"patient-8442a.firebaseapp.com\",\r\n    databaseURL: \"https://patient-8442a.firebaseio.com\",\r\n    projectId: \"patient-8442a\",\r\n    storageBucket: \"patient-8442a.appspot.com\",\r\n    messagingSenderId: \"79766940219\"\r\n};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n  };\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\n//Initialize firestore\r\nconst firestore=firebase.firestore();\r\nconst settings = {timestampsInSnapshots: true};\r\nfirestore.settings(settings);\r\n\r\n// Add reactReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n    reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\r\n    reduxFirestore(firebase) // <- needed if using firestore\r\n  )(createStore);\r\n\r\n  // Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer, // <- needed if using firestore\r\n    // notify:notifyReducer,\r\n    // settings: settingsReducer,\r\n  });\r\n\r\n//Check for settings in Local Storage\r\n/*if(localStorage.getItem('settings')==null){\r\n  //Default settings\r\n  const defaultSettings={\r\n    disableBalanceOnAdd: true, \r\n    disableBalanceOnEdit: false,\r\n    allowRegistration: false\r\n  }\r\n\r\n  //Set to LocalStorage\r\n  localStorage.setItem('settings', JSON.stringify(defaultSettings))\r\n}*/\r\n\r\n// Create initial state\r\nconst initialState = {};\r\n//const initialState = {settings: JSON.parse(localStorage.getItem('settings'))};\r\n\r\n//Create Store\r\nconst store = createStoreWithFirebase(rootReducer, initialState, compose(\r\n    reactReduxFirebase(firebase),\r\n    //window.__REDUX_DEVTOOLS_EXTENTION__ && window.__REDUX_DEVTOOLS_EXTENTION__()\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)) ;\r\n\r\nexport default store;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AppNavbar extends Component {\r\n  render() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n            <Link to='/' className=\"navbar-brand\">\r\n             Admin Panel\r\n            </Link>\r\n            <button \r\n                className=\"navbar-toggler\" \r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarMain\">\r\n            \r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                {/* </ul>{isAuthenticated ? ( */}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                {/* ): null}                     */}\r\n                </ul>\r\n                {/* {isAuthenticated ? (\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <a href=\"#!\" className=\"nav-link\">\r\n                                { auth.email }\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/settings\" className=\"nav-link\">\r\n                                Settings\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a \r\n                                href=\"#!\" \r\n                                className=\"nav-link\" \r\n                                onClick={this.onLogoutClick}\r\n                            >\r\n                                Logout\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                ): null}   */}\r\n\r\n                {/* {allowRegistration && !isAuthenticated ? (\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">   \r\n                            <Link to=\"/login\" className=\"nav-link\">\r\n                                Login\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">   \r\n                            <Link to=\"/register\" className=\"nav-link\">\r\n                                Register\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                ) : null} */}\r\n            </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppNavbar;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => {\r\n  return (\r\n    <Link to=\"/doctor/add\" className=\"btn btn-success btn-block\">\r\n        <i className=\"fas fa-plus\"></i> New\r\n    </Link>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n        <img \r\n            src={spinner} \r\n            alt=\"Loading...\" \r\n            style={{width:'200px' , margin:'auto', display:'block'}}\r\n        />\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass Doctors extends Component {\r\n  // state={\r\n  //   totalPatient:null\r\n  // };\r\n\r\n  // static getDerivedStateFromProps(props, state){\r\n  //   const { doctors } =props;\r\n\r\n  //   if(doctors){\r\n  //     //Add count\r\n  //     const count=doctors.reduce((count, doctor)=>{\r\n  //       return count+parseInt(doctor.totalCount.toString());\r\n  //     }, 0);\r\n     \r\n  //     return { totalPatient : count};\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  render() {\r\n    const {doctors}= this.props;\r\n    // const { totalCount }= this.props;\r\n\r\n  //   const doctors=[\r\n  //     {\r\n  //       id:'46646',\r\n  //       firstName:'Palinda',\r\n  //       lastName:'Meegasooriya',\r\n  //       email:'pali@gmail.com',\r\n  //       phone:'0718899335',\r\n  //       field:'Surgery',\r\n  //       totalCount:\"100\",\r\n  //       count:'12'\r\n  //     },\r\n\r\n  //     {\r\n  //       id:'214545',\r\n  //       firstName:'Anuradha',\r\n  //       lastName:'Herath',\r\n  //       email:'anuradha@gmail.com',\r\n  //       phone:'0789966445',\r\n  //       field:'dental',\r\n  //       totalCount:\"75\",\r\n  //       count:'25'\r\n  //     },\r\n  // ]\r\n  if(doctors){\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h2>\r\n              {' '}\r\n              <i className=\"fas fa-user-md\"></i> Doctors{ ' '}\r\n            </h2>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h5 className=\"text-right text-secondary\">\r\n              Total Doctors{' '}\r\n                <span className=\"text-primary\">\r\n                    {doctors.length}\r\n                    {/* {parseInt(totalCount)} */}\r\n                </span>\r\n              </h5>\r\n          </div>\r\n        </div>\r\n\r\n        <table className=\"table table-striped\">\r\n          <thead className=\"thead-inverse\">\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Field</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Total Patient</th>\r\n              <th>Count</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {doctors.map(doctor => (\r\n              <tr key={doctor.id}>\r\n                <td> {doctor.firstName} {doctor.lastName} </td>\r\n                <td> {doctor.field} </td>\r\n                <td> {doctor.email} </td>\r\n                <td> {doctor.phone} </td>\r\n                <td> {doctor.totalCount} </td>\r\n                <td> {doctor.count} </td>\r\n                <td> \r\n                  <Link to={`/doctor/${doctor.id}`} className=\"btn btn-secondary btn-sm\">\r\n                    <i className=\"fas fa-arrow-circle-right\"></i> Details\r\n                  </Link>                   \r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }else{\r\n    return <Spinner />\r\n  }  \r\n  }\r\n}\r\n\r\nDoctors.propTypes={\r\n  firestore: PropTypes.object.isRequired,\r\n  doctors: PropTypes.array.isRequired\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection : 'doctors'}]),\r\n  connect((state, props) => ({\r\n    doctors: state.firestore.ordered.doctors\r\n  }))\r\n)(Doctors);\r\n\r\n// export default Doctors;\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Doctors from '../doctors/Doctors';\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n            <Doctors />\r\n        </div>\r\n\r\n        <div className=\"col-md-2\">\r\n            <Sidebar />\r\n        </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nclass AddDoctor extends Component {\r\n\r\n  state={\r\n    firstName:'',\r\n    lastName:'',\r\n    email:'',\r\n    phone:'',\r\n    field:'',\r\n    totalCount:'0',\r\n    count:'0'\r\n  };\r\n\r\n  onChange=e=>{\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  onSubmit=(e)=>{\r\n    e.preventDefault();\r\n    const newDoctor=this.state;\r\n\r\n    const { firestore, history } =this.props;\r\n\r\n    firestore\r\n      .add({collection: 'doctors'}, newDoctor)\r\n      .then(() => history.push('/'));\r\n}\r\n\r\n  render() {\r\n    return (\r\n        // <h1>Add Doctor</h1>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <i className=\"fas fa-arrow-circle-left \"></i> Back To Doctor Panel\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">Add Client</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"firstName\"\r\n                            minLength=\"2\"\r\n                            required\r\n                            onChange={this.onChange}\r\n                            value={this.state.firstName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"lastName\"\r\n                            minLength=\"2\"\r\n                            required\r\n                            onChange={this.onChange}\r\n                            value={this.state.lastName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"phone\">Field</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"field\"\r\n                            required\r\n                            onChange={this.onChange}\r\n                            value={this.state.field}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.email}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"phone\"\r\n                            minLength=\"10\"\r\n                            required\r\n                            onChange={this.onChange}\r\n                            value={this.state.phone}\r\n                        />\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddDoctor.propTypes={\r\n  firestore: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n}\r\n\r\nexport default firestoreConnect()(AddDoctor);\r\n\r\n// export default compose(\r\n//   firestoreConnect(),\r\n//   connect((state, props) =>({\r\n//       settings:state.settings\r\n//   }))\r\n// )(AddDoctor);\r\n\r\n// export default AddDoctor;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\nimport classnames from 'classnames';\r\n\r\nclass DoctorDetails extends Component {\r\n    state={\r\n        showDetails: true,\r\n        patientCount : '',\r\n        totalPatient: ''    \r\n    };\r\n\r\n    //Update Total Patient\r\n    updateTotalPatient = e =>{\r\n        e.preventDefault();\r\n\r\n        console.log(this.state.totalPatient);\r\n        const { doctor, firestore}=this.props;\r\n        const { totalPatient }=this.state;\r\n\r\n        const doctorUpdate={            \r\n            totalCount: (parseInt(totalPatient)).toString()\r\n        }\r\n\r\n            //Update in fireStore\r\n        firestore.update({collection: 'doctors', doc:doctor.id}, doctorUpdate);\r\n        \r\n    }\r\n\r\n    //Up Total Count\r\n    upTotalCount = e =>{\r\n        e.preventDefault();\r\n\r\n        //  console.log('Work total');\r\n        const { doctor, firestore}=this.props;\r\n        const { patientCount }=this.state;\r\n       \r\n        const doctorUpdate={            \r\n            totalCount: (parseInt(doctor.totalCount)+1).toString()\r\n        }\r\n\r\n        //Update in fireStore\r\n        firestore.update({collection: 'doctors', doc:doctor.id}, doctorUpdate);\r\n        \r\n    }\r\n\r\n    //Down Total Patient\r\n    downTotalCount = e =>{\r\n        e.preventDefault();\r\n\r\n        // console.log('Work');\r\n        const { doctor, firestore}=this.props;\r\n        const { patientCount }=this.state;\r\n\r\n        if(doctor.totalCount>0){\r\n            const doctorUpdate={            \r\n                totalCount: (parseInt(doctor.totalCount)-1).toString()\r\n            }\r\n\r\n            //Update in fireStore\r\n        firestore.update({collection: 'doctors', doc:doctor.id}, doctorUpdate);\r\n        }\r\n    }\r\n\r\n    //DownCount\r\n    downCount = e =>{\r\n        e.preventDefault();\r\n\r\n        // console.log('Work');\r\n        const { doctor, firestore}=this.props;\r\n        const { patientCount }=this.state;\r\n\r\n        if(doctor.count>0){\r\n            const doctorUpdate={            \r\n                count: doctor.count-1\r\n            }\r\n\r\n            //Update in fireStore\r\n        firestore.update({collection: 'doctors', doc:doctor.id}, doctorUpdate);\r\n        }\r\n    }\r\n\r\n    //Count Up\r\n    upCount = e =>{\r\n        e.preventDefault();\r\n\r\n        // console.log('Work');\r\n        const { doctor, firestore}=this.props;\r\n        const { patientCount }=this.state;\r\n\r\n        if(doctor.count<doctor.totalCount){\r\n            const doctorUpdate={\r\n                count: doctor.count+1\r\n            }\r\n    \r\n            //Update in fireStore\r\n            firestore.update({collection: 'doctors', doc:doctor.id}, doctorUpdate);\r\n        }        \r\n    }\r\n\r\n    //Update Balance\r\n    countSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        // console.log(this.state.patientCount);\r\n        const { doctor, firestore}=this.props;\r\n        const { patientCount }=this.state;\r\n\r\n        const doctorUpdate={\r\n            count: parseInt(patientCount)\r\n        }\r\n\r\n        //Update in fireStore\r\n        firestore.update({collection: 'doctors', doc:doctor.id}, doctorUpdate);\r\n    }\r\n    //Delete Doctor\r\n    onDeleteClick=()=>{\r\n        const { doctor, firestore, history} = this.props;\r\n\r\n        firestore\r\n            .delete({collection: 'doctors', doc:doctor.id})\r\n            .then(history.push('/'));\r\n    }\r\n    \r\n\r\n    onChange=e=> this.setState({[e.target.name] : e.target.value});\r\n\r\n\r\n  render() {\r\n      const { doctor }=this.props;\r\n      const { showDetails, patientCount, totalPatient }=this.state;\r\n\r\n      let countForm ='';\r\n      //if balance form should display\r\n      if(showDetails){\r\n        countForm=(\r\n              <form onSubmit={this.countSubmit}>\r\n                  <div className=\"input-group\">\r\n                    <input \r\n                        type=\"number\"\r\n                        className=\"form-control\" \r\n                        name=\"patientCount\"\r\n                        placeholder=\"Add updated Patient Number\"\r\n                        value={patientCount}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <input type=\"submit\" value=\"Update\" className=\"btn btn-outline-dark\" />\r\n                    </div>\r\n                    <div className=\"input-group-append\" onClick={this.downCount}>\r\n                        <span className=\"btn btn-outline-dark\">Down</span>\r\n                    </div>\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"btn btn-outline-dark\" onClick={this.upCount}>Up</span>\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n\r\n                {/* Update Total Patient */}\r\n                  <div className=\"input-group\">\r\n                    <input \r\n                        type=\"number\"\r\n                        className=\"form-control\" \r\n                        name=\"totalPatient\"\r\n                        placeholder=\"Add Total Patient\"\r\n                        value={totalPatient}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <div className=\"input-group-append\" onClick={this.updateTotalPatient}>\r\n                    <span className=\"btn btn-outline-dark\">Update</span>\r\n                    </div>\r\n\r\n                    <div className=\"input-group-append\" onClick={this.downTotalCount}>\r\n                        <span className=\"btn btn-outline-dark\">Down</span>\r\n                    </div>\r\n\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"btn btn-outline-dark\" onClick={this.upTotalCount}>Up</span>\r\n                    </div>\r\n                  </div>\r\n              </form>\r\n          )\r\n      }else{\r\n        countForm=null;\r\n      }\r\n\r\n      if(doctor){\r\n        return (\r\n            <div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Link to=\"/\" className=\"btn btn-link\">\r\n                        <i className=\"fas fa-arrow-circle-left\"></i>Back To Dashboard\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"btn-group float-right\">\r\n                        <Link to={`/doctor/edit/${doctor.id}`} className=\"btn btn-dark\">\r\n                        Edit\r\n                        </Link>\r\n                        <button onClick={this.onDeleteClick} className=\"btn btn-danger\" >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"card\">\r\n                <h3 className=\"card-header\">\r\n                    {doctor.firstName} {doctor.lastName}\r\n                </h3>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 col-sm-6\">\r\n                            <h4>Doctor ID:{' '} <span className=\"text-secondary\">{doctor.id}</span></h4>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-6\">\r\n                            <h3 className=\"pull-right\">\r\n                                Patient Number: \r\n                                <span \r\n                                    className={classnames({\r\n                                        'text-danger':doctor.count > 0,\r\n                                        'text-success': doctor.count===0\r\n                                    })}>\r\n                                    {parseInt(doctor.count)} {' '}\r\n                                </span>\r\n                                <span>\r\n                                    /\r\n                                </span>\r\n                                <span className='text-success'>\r\n                                    {' '} {parseInt(doctor.totalCount)} {'     '}\r\n                                </span>\r\n                                <small>\r\n                                    <a href=\"#!\" onClick={()=>this.setState({ showDetails: !this.state.showDetails})}>\r\n                                        {'  '}<i className=\"fas fa-pencil-alt\"></i>\r\n                                    </a>  \r\n                                </small>\r\n                            </h3>       \r\n                            {countForm}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">Field: {doctor.field}</li>\r\n                        <li className=\"list-group-item\">Contact Email: {doctor.email}</li>\r\n                        <li className=\"list-group-item\">Contact Phone: {doctor.phone}</li>\r\n                        <li className=\"list-group-item\">Total Number of Patient: {doctor.totalCount}</li>\r\n                        <li className=\"list-group-item\">Current Queue Number: {doctor.count}</li>\r\n                    </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n      }else{\r\n          return <Spinner />\r\n      }    \r\n  }\r\n}\r\n\r\nDoctorDetails.propTypes={\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection:'doctors', storeAs:'doctor', doc: props.match.params.id}\r\n    ]),\r\n    connect(({ firestore: { ordered }}, props) => ({\r\n        doctor: ordered.doctor && ordered.doctor[0]\r\n    }))\r\n  )(DoctorDetails);\r\n\r\n//   export default DoctorDetails;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass EditDoctor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        //Create refs\r\n        this.firstNameInput=React.createRef();\r\n        this.lastNameInput=React.createRef();\r\n        this.fieldInput=React.createRef();\r\n        this.emailInput=React.createRef();\r\n        this.phoneInput=React.createRef();        \r\n    }\r\n\r\n    onSubmit=e=>{\r\n        e.preventDefault();\r\n\r\n        const { doctor, firestore, history }= this.props;\r\n\r\n        //update Doctor\r\n        const updDoctor={\r\n            firstName:this.firstNameInput.current.value,\r\n            lastName:this.lastNameInput.current.value,\r\n            field:this.fieldInput.current.value,\r\n            email:this.emailInput.current.value,\r\n            phone:this.phoneInput.current.value,\r\n        }\r\n\r\n        //Update Doctor in Firestore\r\n        firestore\r\n            .update({collection:'doctors', doc:doctor.id}, updDoctor)\r\n            .then(history.push('/'));\r\n    }\r\n  render() {\r\n      const { doctor } =this.props;\r\n\r\n    if( doctor ){\r\n        return (\r\n            <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <i className=\"fas fa-arrow-circle-left \"></i> Back To Doctor Panel\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">Add Client</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"firstName\"\r\n                            minLength=\"2\"\r\n                            required\r\n                            ref={this.firstNameInput}\r\n                            onChange={this.onChange}\r\n                            defaultValue={doctor.firstName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"lastName\"\r\n                            minLength=\"2\"\r\n                            required\r\n                            ref={this.lastNameInput}\r\n                            onChange={this.onChange}\r\n                            defaultValue={doctor.lastName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"phone\">Field</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"field\"\r\n                            required\r\n                            ref={this.fieldInput}\r\n                            onChange={this.onChange}\r\n                            defaultValue={doctor.field}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            ref={this.emailInput}\r\n                            onChange={this.onChange}\r\n                            defaultValue={doctor.email}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"phone\"\r\n                            minLength=\"10\"\r\n                            required\r\n                            ref={this.phoneInput}\r\n                            onChange={this.onChange}\r\n                            defaultValue={doctor.phone}\r\n                        />\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n      </div>\r\n        );\r\n    }else{\r\n        return <Spinner />\r\n    }\r\n  }\r\n}\r\n\r\n// export default EditDoctor;\r\n\r\nEditDoctor.propTypes={\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection:'doctors', storeAs:'doctor', doc: props.match.params.id}\r\n    ]),\r\n    connect(({ firestore: { ordered }}, props) => ({\r\n        doctor: ordered.doctor && ordered.doctor[0]\r\n    }))\r\n  )(EditDoctor);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {compose} from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass QueueNumber extends Component {\r\n  render() {\r\n      const { doctors }=this.props;\r\n    \r\n      if(doctors){\r\n          return(\r\n              <div>                \r\n                {doctors.map(doctor =>(\r\n                    <div className=\"card\">\r\n                    <h3 className=\"card-header\">\r\n                        Doctor {doctor.firstName} {doctor.lastName}\r\n                    </h3>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 col-sm-6\">\r\n                                <div className=\"pull-right\">\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Field: {doctor.field}</li>\r\n                                    <li className=\"list-group-item\">Contact Email: {doctor.email}</li>\r\n                                    <li className=\"list-group-item\">Contact Phone: {doctor.phone}</li>\r\n                                </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3 col-sm-6\">\r\n                                <div className=\"pull-left\">\r\n                                    <div>\r\n                                        Channeling Number\r\n                                    </div>\r\n                                    <div className=\"text-primary\">\r\n                                        <h1>\r\n                                            {doctor.count}\r\n                                        </h1>                                       \r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3 col-sm-6\">\r\n                                <div className=\"pull-left\">\r\n                                <div>\r\n                                    Total Patient\r\n                                </div>\r\n\r\n                                <div className=\"text-danger\">\r\n                                    <h1>\r\n                                        {doctor.totalCount} \r\n                                    </h1>\r\n                                </div>                                    \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                ))}\r\n                    \r\n                <hr />\r\n                \r\n              </div>\r\n          )\r\n      }else{\r\n          return <Spinner />\r\n      }\r\n  }\r\n}\r\n\r\n// export default  QueueNumber;\r\n\r\nQueueNumber.propTypes={\r\n    firestore: PropTypes.object.isRequired,\r\n    doctors: PropTypes.array.isRequired\r\n}\r\n\r\n// export default compose(\r\n//     firestoreConnect(props => [\r\n//         { collection:'doctors', storeAs:'doctor', doc: props.match.params.id}\r\n//     ]),\r\n//     connect(({ firestore: { ordered }}, props) => ({\r\n//         doctor: ordered.doctor && ordered.doctor[0]\r\n//     }))\r\n//   )(QueueNumber);\r\n\r\nexport default compose(\r\n    firestoreConnect([{ collection : 'doctors'}]),\r\n    connect((state, props) => ({\r\n      doctors: state.firestore.ordered.doctors\r\n    }))\r\n  )(QueueNumber);\r\n","import React, { Component } from 'react';\n//import './App.css';\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'; \nimport AppNavbar from './components/layout/AppNavbar';\nimport Dashboard from './components/layout/Dashboard';\nimport AddDoctor from './components/doctors/AddDoctor';\nimport DoctorDetails from './components/doctors/DoctorDetails';\nimport EditDoctor from './components/doctors/EditDoctor';\nimport QueueNumber from './components/patient/QueueNumber';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n        <div>\n          <AppNavbar />\n          <div className=\"container\">\n            <Switch>\n              <Route \n                exact\n                path=\"/\"\n                component={Dashboard}\n              />\n\n              <Route \n                exact\n                path=\"/doctor/add\"\n                component={AddDoctor}\n              />\n\n              <Route \n                exact\n                path=\"/doctor/:id\"\n                component={DoctorDetails}\n              />\n\n              <Route \n                exact\n                path=\"/doctor/edit/:id\"\n                component={EditDoctor}\n              />\n\n              <Route \n                exact\n                path=\"/queuenumber\"\n                component={QueueNumber}\n              />\n\n\n            </Switch>\n          </div>\n        </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}